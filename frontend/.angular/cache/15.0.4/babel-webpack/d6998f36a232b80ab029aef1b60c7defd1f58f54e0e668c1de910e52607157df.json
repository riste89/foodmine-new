{"ast":null,"code":"import { sample_foods, sample_tags } from 'src/data';\nimport * as i0 from \"@angular/core\";\nexport class FoodService {\n  constructor() {}\n  getAll() {\n    return sample_foods;\n  }\n  getFoodBySearchTerm(searchTearm) {\n    return this.getAll().filter(food => food.name.toLocaleLowerCase().includes(searchTearm.toLocaleLowerCase()));\n  }\n  getAllTags() {\n    return sample_tags;\n  }\n  getTagByTagName(tag) {\n    return tag === 'All' ? this.getAll() : this.getAll;\n  }\n}\nFoodService.ɵfac = function FoodService_Factory(t) {\n  return new (t || FoodService)();\n};\nFoodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodService,\n  factory: FoodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,WAAW,QAAQ,UAAU;;AAOpD,OAAM,MAAOC,WAAW;EAEtBC,eAAgB;EAEhBC,MAAM;IACJ,OAAOJ,YAAY;EACrB;EAEAK,mBAAmB,CAACC,WAAkB;IACpC,OAAO,IAAI,CAACF,MAAM,EAAE,CAACG,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAACL,WAAW,CAACI,iBAAiB,EAAE,CAAC,CAAC;EAC5G;EAEAE,UAAU;IACR,OAAOX,WAAW;EACpB;EAEAY,eAAe,CAACC,GAAU;IACxB,OAAOA,GAAG,KAAK,KAAK,GACpB,IAAI,CAACV,MAAM,EAAE,GACb,IAAI,CAACA,MAAM;EACb;;AApBWF,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["sample_foods","sample_tags","FoodService","constructor","getAll","getFoodBySearchTerm","searchTearm","filter","food","name","toLocaleLowerCase","includes","getAllTags","getTagByTagName","tag","factory","providedIn"],"sourceRoot":"","sources":["/home/riste/Desktop/foodmine/frontend/src/app/service/food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { sample_foods, sample_tags } from 'src/data';\nimport { Food } from '../sheard/models/food';\nimport { Tag } from '../sheard/models/tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor() { }\n\n  getAll():Food[]{\n    return sample_foods\n  }\n\n  getFoodBySearchTerm(searchTearm:string){\n    return this.getAll().filter(food=>food.name.toLocaleLowerCase().includes(searchTearm.toLocaleLowerCase()))\n  }\n\n  getAllTags():Tag[]{\n    return sample_tags\n  }\n\n  getTagByTagName(tag:string):Food[]{\n    return tag === 'All'?\n    this.getAll() :\n    this.getAll\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}